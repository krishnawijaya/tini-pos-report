name: Deploy to Server

on: 
    push:
        branches:
            - staging

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Main Repository
              uses: actions/checkout@v2
              with:
                repository: krishnawijaya/tini-pos
                token: ${{ secrets.ACCESS_TOKEN }}
                path: main/

            - name: Checkout Tools Repository
              uses: actions/checkout@v2
              with:
                path: tini-pos-report/

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                php-version: '7.4'

            - name: Install Tools Dependencies
              run: |
               cd ./tini-pos-report
               composer update --no-progress --no-scripts --no-interaction
               composer install --no-progress --no-scripts --no-interaction
               npm install --no-progress --ignore-scripts --no-audit --no-fund
               npm run prod

            - name: Install Main Dependencies
              run: |
               cd ./main
               composer update --no-progress --no-scripts --no-interaction
               composer install --no-progress --no-scripts --no-interaction
               php artisan vendor:publish --tag=tiniposreport-assets
               npm install --no-progress --ignore-scripts --no-audit --no-fund
               npm run prod

            - name: Setup Environment File
            #   env:
            #    APP_ENV: ${{ vars.APP_ENV }}
            #    APP_DEBUG: ${{ vars.APP_DEBUG }}
            #    APP_URL: ${{ vars.APP_URL }}
            #    DB_DATABASE: ${{ secrets.DB_DATABASE }}
            #    DB_USERNAME: ${{ secrets.DB_USERNAME }}
            #    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            #    TELESCOPE_ENABLED: ${{ vars.TELESCOPE_ENABLED }}

              run: |
               cd ./main
               cp .env.example .env
               php artisan key:generate
            #    php artisan storage:link

            #    sed "s/APP_ENV=.*/APP_ENV=${APP_ENV}/" .env
            #    sed "s/APP_DEBUG=.*/APP_DEBUG=${APP_DEBUG}/" .env
            #    sed "s/APP_URL=.*/APP_URL=${APP_URL}/" .env
            #    sed "s/DB_DATABASE=.*/DB_DATABASE=${DB_DATABASE}/" .env
            #    sed "s/DB_USERNAME=.*/DB_USERNAME=${DB_USERNAME}/" .env
            #    sed "s/DB_PASSWORD=.*/DB_PASSWORD=${DB_PASSWORD}/" .env
            #    sed "s/TELESCOPE_ENABLED=.*/TELESCOPE_ENABLED=${TELESCOPE_ENABLED}/" .env

            - name: Setup SSH key
              run: |
               mkdir -p ~/.ssh/
               echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
               chmod 600 ~/.ssh/id_rsa

               ssh-keyscan ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
               chmod 600 ~/.ssh/known_hosts

            - name: Deploy Tools to Server
              run: |
               cd ./tini-pos-report
               rsync -azP --delete ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_DIR_PATH }}/tini-pos-report/

            - name: Deploy Main to Server
              run: |
               cd ./main
               rsync -azP --delete ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_DIR_PATH }}/tini-pos/

            - name: Clean up SSH key
              run: rm ~/.ssh/id_rsa